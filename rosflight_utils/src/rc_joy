#!/usr/bin/python

# author: James Jackson

import time
import rospy
from rosflight_msgs.msg import RCRaw
import pygame

rospy.init_node('rc_joy')
rc_pub = rospy.Publisher('RC', RCRaw, queue_size=10)

pygame.display.init()
pygame.joystick.init()

joy = pygame.joystick.Joystick(0)
joy.init()

print "joystick:", joy.get_name()

if 'Taranis' in joy.get_name():
    print "found Taranis"
    controller = 'Taranis'
elif 'Xbox' in joy.get_name() or 'X-Box' in joy.get_name():
    print "found xbox"
    controller = 'xbox'
else:
    print "using realflight mapping"
    controller = 'RealFlight'

# Main event loop
while not rospy.is_shutdown():
    pygame.event.pump()

    update_rate = 50 # Hz
    time.sleep(1./update_rate)

    if controller == 'Taranis':
        msg = RCRaw()
        msg.header.stamp = rospy.Time.now()

        msg.values[0] = joy.get_axis(0) * 500 + 1500
        msg.values[1] = joy.get_axis(1) * 500 + 1500
        msg.values[2] = joy.get_axis(2) * 500 + 1500
        msg.values[3] = joy.get_axis(3) * 500 + 1500
        msg.values[4] = joy.get_axis(4) * 500 + 1500
        msg.values[5] = joy.get_axis(5) * 500 + 1500
        msg.values[6] = joy.get_axis(6) * 500 + 1500
        msg.values[7] = joy.get_axis(7) * 500 + 1500

        rc_pub.publish(msg)

    elif controller == 'xbox':

        msg = RCRaw()
        msg.header.stamp = rospy.Time.now()

        msg.values[0] = joy.get_axis(0) * 500 + 1500
        msg.values[1] = joy.get_axis(1) * 500 + 1500
        msg.values[2] = joy.get_axis(2) * 500 + 1500
        msg.values[3] = joy.get_axis(3) * 500 + 1500
        msg.values[4] = joy.get_axis(4) * 500 + 1500
        msg.values[5] = joy.get_button(0) * 1000 + 1000
        msg.values[6] = joy.get_button(1) * 1000 + 1000
        msg.values[7] = joy.get_button(2) * 1000 + 1000

        rc_pub.publish(msg)

    # RealFlight
    else:
        msg.values[0] = joy.get_axis(0) * 500 + 1500
        msg.values[1] = joy.get_axis(1) * 500 + 1500
        msg.values[2] = joy.get_axis(2) * -500 + 1500
        msg.values[3] = joy.get_axis(4) * 500 + 1500
        msg.values[4] = joy.get_axis(3) * 500 + 1500
        msg.values[5] = joy.get_button(0) * 1000 + 1000
        msg.values[6] = joy.get_button(1) * 1000 + 1000
        msg.values[7] = joy.get_button(2) * 1000 + 1000

        rc_pub.publish(msg)
